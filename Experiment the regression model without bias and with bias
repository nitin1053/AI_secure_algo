import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# 1) Load the dataset
df = pd.read_csv('/content/Iris.csv')
print(df.columns)

# 2) Data preparation: Encode categorical data (Species) and remove the 'Id' column
df_encoded = pd.get_dummies(df.drop(columns=['Id']), drop_first=True)
print(df_encoded.columns)

# Features (X) and Target (y)
x = df_encoded.drop(columns=['SepalLengthCm'])
y = df_encoded['SepalLengthCm']

# Split the data into training and test sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# 3) Train model without bias (intercept)
model_without_bias = LinearRegression(fit_intercept=False)
model_without_bias.fit(x_train, y_train)

# 4) Train model with bias (intercept)
model_with_bias = LinearRegression(fit_intercept=True)
model_with_bias.fit(x_train, y_train)

# 5) Make predictions
y_pred_without_bias = model_without_bias.predict(x_test)
y_pred_with_bias = model_with_bias.predict(x_test)

# 6) Evaluate the models using Mean Squared Error (MSE)
mse_without_bias = mean_squared_error(y_test, y_pred_without_bias)
mse_with_bias = mean_squared_error(y_test, y_pred_with_bias)

print("Mean Squared Error (MSE) without bias:", mse_without_bias)
print("Mean Squared Error (MSE) with bias:", mse_with_bias)

# Optional: Plot comparison of predictions
plt.figure(figsize=(10,5))
plt.subplot(1, 2, 1)
plt.scatter(y_test, y_pred_without_bias)
plt.title('Predictions without Bias')
plt.xlabel('True Values')
plt.ylabel('Predicted Values')

plt.subplot(1, 2, 2)
plt.scatter(y_test, y_pred_with_bias)
plt.title('Predictions with Bias')
plt.xlabel('True Values')
plt.ylabel('Predicted Values')

plt.tight_layout()
plt.show()
