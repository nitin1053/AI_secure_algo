import numpy as np
from sklearn.datasets import make_classification
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from fairlearn.metrics import MetricFrame, selection_rate

# Step 1: Create a synthetic dataset with bias
X, y = make_classification(n_samples=1000, n_features=10, random_state=42)
sensitive_feature = np.random.choice([0, 1], size=len(y))
X_train, X_test, y_train, y_test, sens_train, sens_test = train_test_split(
    X, y, sensitive_feature, test_size=0.3, random_state=42
)

# Step 2: Train a model and evalua  te on the test set
model = RandomForestClassifier(random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model accuracy: {accuracy:.2f}")

# Step 3: Calculate fairness metrics
metric_frame = MetricFrame(
    metrics=selection_rate,
    y_true=y_test,
    y_pred=y_pred,
    sensitive_features=sens_test
)
print("Selection rate for each sensitive group:")
print(metric_frame.by_group)
